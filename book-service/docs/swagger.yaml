basePath: /
definitions:
  models.BookRequest:
    properties:
      author:
        example: Alan Donovan
        type: string
      category:
        example: Technology
        type: string
      price:
        example: 45.99
        type: number
      title:
        example: Go Programming Language
        type: string
    required:
    - author
    - price
    - title
    type: object
  models.BookResponse:
    properties:
      author:
        type: string
      category:
        type: string
      created_at:
        type: string
      id:
        type: integer
      price:
        type: number
      title:
        type: string
    type: object
host: localhost:8081
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: A simple book management service
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: http://swagger.io/terms/
  title: Book Service API
  version: "1.0"
paths:
  /api/v1/books:
    get:
      consumes:
      - application/json
      description: Get list of all books
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.BookResponse'
            type: array
      summary: Get all books
      tags:
      - books
    post:
      consumes:
      - application/json
      description: Create a new book with the provided data
      parameters:
      - description: Book data
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/models.BookRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.BookResponse'
      summary: Create a new book
      tags:
      - books
  /api/v1/books/{id}:
    delete:
      consumes:
      - application/json
      description: Delete book by ID
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      summary: Delete a book
      tags:
      - books
    get:
      consumes:
      - application/json
      description: Get book details by ID
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.BookResponse'
      summary: Get a book by ID
      tags:
      - books
    put:
      consumes:
      - application/json
      description: Update book details by ID
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated book data
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/models.BookRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.BookResponse'
      summary: Update a book
      tags:
      - books
swagger: "2.0"
